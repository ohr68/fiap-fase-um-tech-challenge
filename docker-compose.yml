services:
  fiap.faseum.techchallenge.api:
    container_name: api_fiap
    image: ${DOCKER_REGISTRY-}fiapfaseumtechchallengeapi
    build:
      context: .
      dockerfile: src/FIAP.FaseUm.TechChallenge.Api/Dockerfile
    depends_on:
      sql-server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - fiap_network
    command: sh -c "sleep 10 && dotnet ef database update && dotnet FIAP.FaseUm.TechChallenge.Api.dll"
    
  fiap.faseum.techchallenge.worker:
    container_name: worker_fiap
    image: fiap.faseum.techchallenge.worker
    build:
      context: .
      dockerfile: FIAP.FaseUm.TechChallenge.Worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - fiap_network

  sql-server:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Senha@123
    ports:
      - "1433:1433"
    networks:
      - fiap_network
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1' | /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Senha@123"]
      interval: 10s
      retries: 5

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus_data:/prometheus"
    networks:
      - fiap_network
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:9090/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
  
  node-exporter:
    image: prom/node-exporter
    networks:
      - fiap_network
    ports:
      - 9100:9100
 
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    depends_on:
      prometheus:
         condition: service_healthy  
    ports:
      - 3000:3000
    networks:
      - fiap_network
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3000/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
  
  rabbitmq:
    image: masstransit/rabbitmq
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fiap_network

networks:
  fiap_network:
    driver: bridge

volumes:
  sqlserver-data:
  prometheus_data:
  grafana_data:
